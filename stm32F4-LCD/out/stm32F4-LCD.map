
Discarded input sections

 .data          0x00000000        0x0 out/startup.o
 .bss           0x00000000        0x0 out/startup.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .group         0x00000000        0x8 out/main.o
 .text          0x00000000        0x0 out/main.o
 .data          0x00000000        0x0 out/main.o
 .bss           0x00000000        0x0 out/main.o
 .text.RCC_config
                0x00000000       0x20 out/main.o
 .text.PLL_config
                0x00000000       0xe8 out/main.o
 .group         0x00000000        0x8 out/vectors.o
 .text          0x00000000        0x0 out/vectors.o
 .data          0x00000000        0x0 out/vectors.o
 .bss           0x00000000        0x0 out/vectors.o
 .debug_macro   0x00000000      0x880 out/vectors.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .group         0x00000000        0x8 out/gpio.o
 .text          0x00000000        0x0 out/gpio.o
 .data          0x00000000        0x0 out/gpio.o
 .bss           0x00000000        0x0 out/gpio.o
 .text.gpio_init
                0x00000000       0x24 out/gpio.o
 .debug_macro   0x00000000      0x880 out/gpio.o
 .debug_macro   0x00000000       0x22 out/gpio.o
 .debug_macro   0x00000000       0x44 out/gpio.o
 .debug_macro   0x00000000       0xfd out/gpio.o
 .debug_macro   0x00000000       0x22 out/gpio.o
 .debug_macro   0x00000000      0x1df out/gpio.o
 .debug_macro   0x00000000       0x5d out/gpio.o
 .debug_macro   0x00000000       0x35 out/gpio.o
 .debug_macro   0x00000000       0x18 out/gpio.o
 .debug_macro   0x00000000       0x42 out/gpio.o
 .debug_macro   0x00000000      0x8cb out/gpio.o
 .debug_macro   0x00000000     0x8088 out/gpio.o
 .debug_macro   0x00000000       0xd6 out/gpio.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x08000000         0x00100000         xr
ram              0x20000000         0x0001c000         xrw
aux_ram          0x2001c000         0x00004000         xrw
ccm_ram          0x10000000         0x00010000         rw
bkp_ram          0x40024000         0x00001000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD out/startup.o
LOAD out/main.o
LOAD out/vectors.o
LOAD out/gpio.o
LOAD g:/stm32toolchain/gnu-arm/5.2_2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/../../../../arm-none-eabi/lib/armv7e-m/fpu\libstdc++.a
LOAD g:/stm32toolchain/gnu-arm/5.2_2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/../../../../arm-none-eabi/lib/armv7e-m/fpu\libm.a
START GROUP
LOAD g:/stm32toolchain/gnu-arm/5.2_2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/armv7e-m/fpu\libgcc.a
LOAD g:/stm32toolchain/gnu-arm/5.2_2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/../../../../arm-none-eabi/lib/armv7e-m/fpu\libg.a
LOAD g:/stm32toolchain/gnu-arm/5.2_2015q4/bin/../lib/gcc/arm-none-eabi/5.2.1/../../../../arm-none-eabi/lib/armv7e-m/fpu\libc.a
END GROUP
                0x00000000                __main_stack_size = 0x0
                0x00000400                __process_stack_size = 0x400
                [!provide]                PROVIDE (__main_stack_size, __main_stack_size)
                [!provide]                PROVIDE (__process_stack_size, __process_stack_size)
                0x08000000                __rom_start = ORIGIN (rom)
                0x00100000                __rom_size = LENGTH (rom)
                0x08100000                __rom_end = (__rom_start + __rom_size)
                0x20000000                __ram_start = ORIGIN (ram)
                0x0001c000                __ram_size = LENGTH (ram)
                0x2001c000                __ram_end = (__ram_start + __ram_size)
                0x2001c000                __aux_ram_start = ORIGIN (aux_ram)
                0x00004000                __aux_ram_size = LENGTH (aux_ram)
                0x20020000                __aux_ram_end = (__aux_ram_start + __aux_ram_size)
                0x10000000                __ccm_ram_start = ORIGIN (ccm_ram)
                0x00010000                __ccm_ram_size = LENGTH (ccm_ram)
                0x10010000                __ccm_ram_end = (__ccm_ram_start + __ccm_ram_size)
                0x40024000                __bkp_ram_start = ORIGIN (bkp_ram)
                0x00001000                __bkp_ram_size = LENGTH (bkp_ram)
                0x40025000                __bkp_ram_end = (__bkp_ram_start + __bkp_ram_size)
                [!provide]                PROVIDE (__rom_start, __rom_start)
                [!provide]                PROVIDE (__rom_size, __rom_size)
                [!provide]                PROVIDE (__rom_end, __rom_end)
                [!provide]                PROVIDE (__ram_start, __ram_start)
                [!provide]                PROVIDE (__ram_size, __ram_size)
                [!provide]                PROVIDE (__ram_end, __ram_end)
                [!provide]                PROVIDE (__aux_ram_start, __aux_ram_start)
                [!provide]                PROVIDE (__aux_ram_size, __aux_ram_size)
                [!provide]                PROVIDE (__aux_ram_end, __aux_ram_end)
                [!provide]                PROVIDE (__ccm_ram_start, __ccm_ram_start)
                [!provide]                PROVIDE (__ccm_ram_size, __ccm_ram_size)
                [!provide]                PROVIDE (__ccm_ram_end, __ccm_ram_end)
                [!provide]                PROVIDE (__bkp_ram_start, __bkp_ram_start)
                [!provide]                PROVIDE (__bkp_ram_size, __bkp_ram_size)
                [!provide]                PROVIDE (__bkp_ram_end, __bkp_ram_end)

.text           0x08000000      0x35c
                0x08000000                . = ALIGN (0x4)
                0x08000000                __text_start = .
                [!provide]                PROVIDE (__text_start, __text_start)
                0x08000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x08000000      0x188 out/vectors.o
                0x08000000                vectors
                0x08000188                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text          0x08000188       0x68 out/startup.o
                0x08000188                Reset_Handler
                0x080001ca                low_level_init_1
                0x080001ca                low_level_init_0
                0x080001ca                __default_low_level_init
 .text.main     0x080001f0       0x18 out/main.o
                0x080001f0                main
 .text.__Default_Handler
                0x08000208       0x10 out/vectors.o
                0x08000208                RTC_Alarm_IRQHandler
                0x08000208                HASH_RNG_IRQHandler
                0x08000208                EXTI2_IRQHandler
                0x08000208                TIM8_CC_IRQHandler
                0x08000208                DebugMon_Handler
                0x08000208                TIM1_CC_IRQHandler
                0x08000208                DMA2_Stream5_IRQHandler
                0x08000208                HardFault_Handler
                0x08000208                DMA1_Stream5_IRQHandler
                0x08000208                SysTick_Handler
                0x08000208                PVD_IRQHandler
                0x08000208                SDIO_IRQHandler
                0x08000208                TAMP_STAMP_IRQHandler
                0x08000208                __Reserved_0x1C_Handler
                0x08000208                PendSV_Handler
                0x08000208                NMI_Handler
                0x08000208                CAN2_RX1_IRQHandler
                0x08000208                EXTI3_IRQHandler
                0x08000208                TIM8_TRG_COM_TIM14_IRQHandler
                0x08000208                TIM1_UP_TIM10_IRQHandler
                0x08000208                TIM8_UP_TIM13_IRQHandler
                0x08000208                I2C3_ER_IRQHandler
                0x08000208                __Reserved_0x20_Handler
                0x08000208                EXTI0_IRQHandler
                0x08000208                I2C2_EV_IRQHandler
                0x08000208                DMA1_Stream2_IRQHandler
                0x08000208                CAN1_RX0_IRQHandler
                0x08000208                FPU_IRQHandler
                0x08000208                OTG_HS_WKUP_IRQHandler
                0x08000208                UsageFault_Handler
                0x08000208                CAN2_SCE_IRQHandler
                0x08000208                DMA2_Stream2_IRQHandler
                0x08000208                SPI1_IRQHandler
                0x08000208                TIM6_DAC_IRQHandler
                0x08000208                TIM1_BRK_TIM9_IRQHandler
                0x08000208                DCMI_IRQHandler
                0x08000208                CAN2_RX0_IRQHandler
                0x08000208                DMA2_Stream3_IRQHandler
                0x08000208                USART6_IRQHandler
                0x08000208                USART3_IRQHandler
                0x08000208                CRYP_IRQHandler
                0x08000208                CAN1_RX1_IRQHandler
                0x08000208                UART5_IRQHandler
                0x08000208                DMA2_Stream0_IRQHandler
                0x08000208                TIM4_IRQHandler
                0x08000208                __Reserved_0x34_Handler
                0x08000208                I2C1_EV_IRQHandler
                0x08000208                DMA1_Stream6_IRQHandler
                0x08000208                DMA1_Stream1_IRQHandler
                0x08000208                UART4_IRQHandler
                0x08000208                TIM3_IRQHandler
                0x08000208                RCC_IRQHandler
                0x08000208                TIM8_BRK_TIM12_IRQHandler
                0x08000208                EXTI15_10_IRQHandler
                0x08000208                ADC_IRQHandler
                0x08000208                DMA1_Stream7_IRQHandler
                0x08000208                TIM7_IRQHandler
                0x08000208                CAN2_TX_IRQHandler
                0x08000208                TIM5_IRQHandler
                0x08000208                DMA2_Stream7_IRQHandler
                0x08000208                I2C3_EV_IRQHandler
                0x08000208                __Reserved_0x28_Handler
                0x08000208                EXTI9_5_IRQHandler
                0x08000208                RTC_WKUP_IRQHandler
                0x08000208                ETH_WKUP_IRQHandler
                0x08000208                SPI2_IRQHandler
                0x08000208                OTG_HS_EP1_IN_IRQHandler
                0x08000208                MemManage_Handler
                0x08000208                DMA1_Stream0_IRQHandler
                0x08000208                __Reserved_0x24_Handler
                0x08000208                CAN1_TX_IRQHandler
                0x08000208                SVC_Handler
                0x08000208                EXTI4_IRQHandler
                0x08000208                FSMC_IRQHandler
                0x08000208                ETH_IRQHandler
                0x08000208                OTG_HS_EP1_OUT_IRQHandler
                0x08000208                WWDG_IRQHandler
                0x08000208                TIM2_IRQHandler
                0x08000208                OTG_FS_WKUP_IRQHandler
                0x08000208                TIM1_TRG_COM_TIM11_IRQHandler
                0x08000208                OTG_HS_IRQHandler
                0x08000208                EXTI1_IRQHandler
                0x08000208                USART2_IRQHandler
                0x08000208                I2C2_ER_IRQHandler
                0x08000208                DMA2_Stream1_IRQHandler
                0x08000208                CAN1_SCE_IRQHandler
                0x08000208                FLASH_IRQHandler
                0x08000208                DMA2_Stream4_IRQHandler
                0x08000208                BusFault_Handler
                0x08000208                USART1_IRQHandler
                0x08000208                OTG_FS_IRQHandler
                0x08000208                SPI3_IRQHandler
                0x08000208                DMA1_Stream4_IRQHandler
                0x08000208                I2C1_ER_IRQHandler
                0x08000208                DMA2_Stream6_IRQHandler
                0x08000208                DMA1_Stream3_IRQHandler
 .text.gpio_pin_cfg
                0x08000218      0x144 out/gpio.o
                0x08000218                gpio_pin_cfg
                0x0800035c                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x0800035c        0x0 linker stubs
 .glue_7t       0x0800035c        0x0 linker stubs
                0x0800035c                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
                0x0800035c                . = ALIGN (0x4)
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x0800035c                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x0800035c                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x0800035c                . = ALIGN (0x4)
 *(.eh_frame)
                0x0800035c                . = ALIGN (0x4)
 *(.init)
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __preinit_array_start = .
 *(.preinit_array)
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __preinit_array_end = .
                0x0800035c                __init_array_start = .
 *(SORT(.init_array.*))
                0x0800035c                . = ALIGN (0x4)
 *(.init_array)
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __init_array_end = .
 *(.fini)
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __fini_array_start = .
 *(.fini_array)
                0x0800035c                . = ALIGN (0x4)
 *(SORT(.fini_array.*))
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __fini_array_end = .
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __text_end = .
                [!provide]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x0800035c        0x0
 .vfp11_veneer  0x0800035c        0x0 linker stubs

.v4_bx          0x0800035c        0x0
 .v4_bx         0x0800035c        0x0 linker stubs

.iplt           0x0800035c        0x0
 .iplt          0x0800035c        0x0 out/startup.o

.rel.dyn        0x0800035c        0x0
 .rel.iplt      0x0800035c        0x0 out/startup.o
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __exidx_start = .
                [!provide]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x0800035c                . = ALIGN (0x4)
                0x0800035c                __exidx_end = .
                [!provide]                PROVIDE (__exidx_end, __exidx_end)

.data           0x20000000        0x0 load address 0x0800035c
                0x20000000                . = ALIGN (0x4)
                0x0800035c                __data_init_start = LOADADDR (.data)
                [!provide]                PROVIDE (__data_init_start, __data_init_start)
                0x20000000                __data_start = .
                [!provide]                PROVIDE (__data_start, __data_start)
                0x20000000                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __data_end = .
                [!provide]                PROVIDE (__data_end, __data_end)

.igot.plt       0x20000000        0x0 load address 0x0800035c
 .igot.plt      0x20000000        0x0 out/startup.o

.bss            0x20000000        0x0
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_start = .
                [!provide]                PROVIDE (__bss_start, __bss_start)
                0x20000000                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
                0x20000000                . = ALIGN (0x4)
 *(COMMON)
                0x20000000                . = ALIGN (0x4)
                0x20000000                __bss_end = .
                [!provide]                PROVIDE (__bss_end, __bss_end)

.stack          0x20000000      0x400
                0x20000000                . = ALIGN (0x8)
                0x20000000                __stack_start = .
                [!provide]                PROVIDE (__stack_start, __stack_start)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_start = .
                [!provide]                PROVIDE (__main_stack_start, __main_stack_start)
                0x20000000                . = (. + __main_stack_size)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __main_stack_end = .
                [!provide]                PROVIDE (__main_stack_end, __main_stack_end)
                0x20000000                . = ALIGN (0x8)
                0x20000000                __process_stack_start = .
                [!provide]                PROVIDE (__process_stack_start, __process_stack_start)
                0x20000400                . = (. + __process_stack_size)
 *fill*         0x20000000      0x400 
                0x20000400                . = ALIGN (0x8)
                0x20000400                __process_stack_end = .
                [!provide]                PROVIDE (__process_stack_end, __process_stack_end)
                0x20000400                . = ALIGN (0x8)
                0x20000400                __stack_end = .
                [!provide]                PROVIDE (__stack_end, __stack_end)
                0x20000400                . = ALIGN (0x4)
                0x20000400                __heap_start = .
                [!provide]                PROVIDE (__heap_start, __heap_start)
                0x20000400                . = ALIGN (0x4)
                0x2001c000                __heap_end = __ram_end
                [!provide]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x98
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 out/startup.o
 .debug_aranges
                0x00000020       0x30 out/main.o
 .debug_aranges
                0x00000050       0x20 out/vectors.o
 .debug_aranges
                0x00000070       0x28 out/gpio.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x8b3
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x64 out/startup.o
 .debug_info    0x00000064      0x400 out/main.o
 .debug_info    0x00000464       0x88 out/vectors.o
 .debug_info    0x000004ec      0x3c7 out/gpio.o

.debug_abbrev   0x00000000      0x2b0
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x14 out/startup.o
 .debug_abbrev  0x00000014      0x106 out/main.o
 .debug_abbrev  0x0000011a       0x83 out/vectors.o
 .debug_abbrev  0x0000019d      0x113 out/gpio.o

.debug_line     0x00000000      0x58a
 *(.debug_line)
 .debug_line    0x00000000       0x70 out/startup.o
 .debug_line    0x00000070      0x297 out/main.o
 .debug_line    0x00000307       0x3e out/vectors.o
 .debug_line    0x00000345      0x245 out/gpio.o

.debug_frame    0x00000000      0x104
 *(.debug_frame)
 .debug_frame   0x00000000       0x78 out/main.o
 .debug_frame   0x00000078       0x30 out/vectors.o
 .debug_frame   0x000000a8       0x5c out/gpio.o

.debug_str      0x00000000    0x638db
 *(.debug_str)
 .debug_str     0x00000000    0x63727 out/main.o
                              0x638aa (size before relaxing)
 .debug_str     0x00063727       0x35 out/vectors.o
                               0x250b (size before relaxing)
 .debug_str     0x0006375c      0x17f out/gpio.o
                              0x43b8e (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x31
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x25 out/startup.o
 .ARM.attributes
                0x00000025       0x35 out/main.o
 .ARM.attributes
                0x0000005a       0x35 out/vectors.o
 .ARM.attributes
                0x0000008f       0x35 out/gpio.o

/DISCARD/
 *(.note.GNU-stack)
                [!provide]                PROVIDE (__text_size, (__text_end - __text_start))
                [!provide]                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                [!provide]                PROVIDE (__data_size, (__data_end - __data_start))
                [!provide]                PROVIDE (__bss_size, (__bss_end - __bss_start))
                [!provide]                PROVIDE (__stack_size, (__stack_end - __stack_start))
                [!provide]                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(out/stm32F4-LCD.elf elf32-littlearm)

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x20 out/main.o
 .debug_ranges  0x00000020       0x10 out/vectors.o
 .debug_ranges  0x00000030       0x18 out/gpio.o

.debug_macro    0x00000000     0xeb42
 .debug_macro   0x00000000       0xbc out/main.o
 .debug_macro   0x000000bc      0x880 out/main.o
 .debug_macro   0x0000093c       0x22 out/main.o
 .debug_macro   0x0000095e       0x44 out/main.o
 .debug_macro   0x000009a2       0xfd out/main.o
 .debug_macro   0x00000a9f       0x22 out/main.o
 .debug_macro   0x00000ac1      0x1df out/main.o
 .debug_macro   0x00000ca0       0x5d out/main.o
 .debug_macro   0x00000cfd       0x35 out/main.o
 .debug_macro   0x00000d32       0x18 out/main.o
 .debug_macro   0x00000d4a       0x42 out/main.o
 .debug_macro   0x00000d8c      0x8cb out/main.o
 .debug_macro   0x00001657     0x8088 out/main.o
 .debug_macro   0x000096df       0xd6 out/main.o
 .debug_macro   0x000097b5      0xaf4 out/main.o
 .debug_macro   0x0000a2a9     0x3cc3 out/main.o
 .debug_macro   0x0000df6c       0x11 out/vectors.o
 .debug_macro   0x0000df7d       0xcb out/gpio.o
 .debug_macro   0x0000e048      0xafa out/gpio.o

.comment        0x00000000       0x6e
 .comment       0x00000000       0x6e out/main.o
                                 0x6f (size before relaxing)
 .comment       0x0000006e       0x6f out/vectors.o
 .comment       0x0000006e       0x6f out/gpio.o

Cross Reference Table

Symbol                                            File
ADC_IRQHandler                                    out/vectors.o
BusFault_Handler                                  out/vectors.o
CAN1_RX0_IRQHandler                               out/vectors.o
CAN1_RX1_IRQHandler                               out/vectors.o
CAN1_SCE_IRQHandler                               out/vectors.o
CAN1_TX_IRQHandler                                out/vectors.o
CAN2_RX0_IRQHandler                               out/vectors.o
CAN2_RX1_IRQHandler                               out/vectors.o
CAN2_SCE_IRQHandler                               out/vectors.o
CAN2_TX_IRQHandler                                out/vectors.o
CRYP_IRQHandler                                   out/vectors.o
DCMI_IRQHandler                                   out/vectors.o
DMA1_Stream0_IRQHandler                           out/vectors.o
DMA1_Stream1_IRQHandler                           out/vectors.o
DMA1_Stream2_IRQHandler                           out/vectors.o
DMA1_Stream3_IRQHandler                           out/vectors.o
DMA1_Stream4_IRQHandler                           out/vectors.o
DMA1_Stream5_IRQHandler                           out/vectors.o
DMA1_Stream6_IRQHandler                           out/vectors.o
DMA1_Stream7_IRQHandler                           out/vectors.o
DMA2_Stream0_IRQHandler                           out/vectors.o
DMA2_Stream1_IRQHandler                           out/vectors.o
DMA2_Stream2_IRQHandler                           out/vectors.o
DMA2_Stream3_IRQHandler                           out/vectors.o
DMA2_Stream4_IRQHandler                           out/vectors.o
DMA2_Stream5_IRQHandler                           out/vectors.o
DMA2_Stream6_IRQHandler                           out/vectors.o
DMA2_Stream7_IRQHandler                           out/vectors.o
DebugMon_Handler                                  out/vectors.o
ETH_IRQHandler                                    out/vectors.o
ETH_WKUP_IRQHandler                               out/vectors.o
EXTI0_IRQHandler                                  out/vectors.o
EXTI15_10_IRQHandler                              out/vectors.o
EXTI1_IRQHandler                                  out/vectors.o
EXTI2_IRQHandler                                  out/vectors.o
EXTI3_IRQHandler                                  out/vectors.o
EXTI4_IRQHandler                                  out/vectors.o
EXTI9_5_IRQHandler                                out/vectors.o
FLASH_IRQHandler                                  out/vectors.o
FPU_IRQHandler                                    out/vectors.o
FSMC_IRQHandler                                   out/vectors.o
HASH_RNG_IRQHandler                               out/vectors.o
HardFault_Handler                                 out/vectors.o
I2C1_ER_IRQHandler                                out/vectors.o
I2C1_EV_IRQHandler                                out/vectors.o
I2C2_ER_IRQHandler                                out/vectors.o
I2C2_EV_IRQHandler                                out/vectors.o
I2C3_ER_IRQHandler                                out/vectors.o
I2C3_EV_IRQHandler                                out/vectors.o
MemManage_Handler                                 out/vectors.o
NMI_Handler                                       out/vectors.o
OTG_FS_IRQHandler                                 out/vectors.o
OTG_FS_WKUP_IRQHandler                            out/vectors.o
OTG_HS_EP1_IN_IRQHandler                          out/vectors.o
OTG_HS_EP1_OUT_IRQHandler                         out/vectors.o
OTG_HS_IRQHandler                                 out/vectors.o
OTG_HS_WKUP_IRQHandler                            out/vectors.o
PLL_config                                        out/main.o
PVD_IRQHandler                                    out/vectors.o
PendSV_Handler                                    out/vectors.o
RCC_IRQHandler                                    out/vectors.o
RCC_config                                        out/main.o
RTC_Alarm_IRQHandler                              out/vectors.o
RTC_WKUP_IRQHandler                               out/vectors.o
Reset_Handler                                     out/startup.o
                                                  out/vectors.o
SDIO_IRQHandler                                   out/vectors.o
SPI1_IRQHandler                                   out/vectors.o
SPI2_IRQHandler                                   out/vectors.o
SPI3_IRQHandler                                   out/vectors.o
SVC_Handler                                       out/vectors.o
SysTick_Handler                                   out/vectors.o
TAMP_STAMP_IRQHandler                             out/vectors.o
TIM1_BRK_TIM9_IRQHandler                          out/vectors.o
TIM1_CC_IRQHandler                                out/vectors.o
TIM1_TRG_COM_TIM11_IRQHandler                     out/vectors.o
TIM1_UP_TIM10_IRQHandler                          out/vectors.o
TIM2_IRQHandler                                   out/vectors.o
TIM3_IRQHandler                                   out/vectors.o
TIM4_IRQHandler                                   out/vectors.o
TIM5_IRQHandler                                   out/vectors.o
TIM6_DAC_IRQHandler                               out/vectors.o
TIM7_IRQHandler                                   out/vectors.o
TIM8_BRK_TIM12_IRQHandler                         out/vectors.o
TIM8_CC_IRQHandler                                out/vectors.o
TIM8_TRG_COM_TIM14_IRQHandler                     out/vectors.o
TIM8_UP_TIM13_IRQHandler                          out/vectors.o
UART4_IRQHandler                                  out/vectors.o
UART5_IRQHandler                                  out/vectors.o
USART1_IRQHandler                                 out/vectors.o
USART2_IRQHandler                                 out/vectors.o
USART3_IRQHandler                                 out/vectors.o
USART6_IRQHandler                                 out/vectors.o
UsageFault_Handler                                out/vectors.o
WWDG_IRQHandler                                   out/vectors.o
__Reserved_0x1C_Handler                           out/vectors.o
__Reserved_0x20_Handler                           out/vectors.o
__Reserved_0x24_Handler                           out/vectors.o
__Reserved_0x28_Handler                           out/vectors.o
__Reserved_0x34_Handler                           out/vectors.o
__bss_end                                         out/startup.o
__bss_start                                       out/startup.o
__data_end                                        out/startup.o
__data_init_start                                 out/startup.o
__data_start                                      out/startup.o
__default_low_level_init                          out/startup.o
__main_stack_end                                  out/vectors.o
__process_stack_end                               out/startup.o
gpio_init                                         out/gpio.o
gpio_pin_cfg                                      out/gpio.o
                                                  out/main.o
low_level_init_0                                  out/startup.o
low_level_init_1                                  out/startup.o
main                                              out/main.o
                                                  out/startup.o
vectors                                           out/vectors.o
